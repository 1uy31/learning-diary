[tox]
minversion = 3.23.1
isolated_build = True
skipsdist = True
envlist = {py310}

[base]
install_command = poetry add {packages}
deps =
    poetry-core

[testenv:codeFormatAndLint]
description = Run code formatting, lint and type checking. --To be run inside virtual env / container.--
;changedir=core (to run code formatting for specific dir)
allowlist_externals =
    autoflake
    black
    isort
    flake8
    pylint
    mypy
commands =
    autoflake -r -i --exclude=migrations --remove-unused-variables --remove-all-unused-imports --ignore-init-module-imports .
    black .
    isort .
    flake8
    pylint core
    mypy .

[testenv:testsDebug]
description = Run tests in debug mode. --To be run inside virtual env / container.--
allowlist_externals = poetry
commands =
    poetry install
;    drop to PDB on first failure, then end test session
    poetry run pytest -x --pdb

;    drop into the PDB prompt immediately at the start of each test
;    poetry run pytest --trace

[testenv:all]
description = Run code formatting + lint and type checking + tests + coverage. --To be run inside virtual env / container.--
allowlist_externals =
    autoflake
    black
    isort
    flake8
    pylint
    mypy
    poetry
commands =
    autoflake -r -i --exclude=migrations --remove-unused-variables --remove-all-unused-imports --ignore-init-module-imports .
    black .
    isort .
    flake8
    pylint core
    mypy .
    poetry install
    poetry run pytest
    poetry run coverage report
;    poetry run coverage html


